@page "/list/{Id}"

@using Models = Kertu.InteractiveServer.Data.Models.Elements
@using Microsoft.EntityFrameworkCore
@using Data

@inject ApplicationDbContext dbContext
@inject NavigationManager navigationManager
@inject Account.IdentityUserAccessor userAccessor
@inject IHttpContextAccessor httpContextAccessor

<RadzenText TagName="TagName.H2">@_title</RadzenText>
<div class="aurora-background">
	<div class="aurora"></div>
	<div class="aurora"></div>
	<div class="aurora"></div>
</div>

<!-- Input to add new card -->
<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Style="margin-bottom: 10px; padding: 0.85rem; height: 74px;">
    <RadzenTextBox Placeholder="Add a new card" Style="width:100%; height:100%" @bind-Value="_newCardName" @onkeydown="OnKeyDown" />
    <RadzenButton Icon="add" Click="@AddNewCard" Disabled="@string.IsNullOrWhiteSpace(_newCardName)">Add</RadzenButton>
</RadzenStack>

<RadzenDataList Data="@_active" TItem="Models.Card">
    <Template Context="card">
        <RadzenStack AlignItems="AlignItems.Center" Orientation="Orientation.Horizontal" Style="cursor: pointer"
                     @onclick="() => Open(card)">
            @if (card is Models.TaskCard taskCard)
            {
                <div @onclick:stopPropagation="true" @onclick:preventDefault="true">
                    <RadzenIcon Icon="radio_button_unchecked" class="radio-check" @onclick="() => MarkAsCompleted(taskCard)" />
                </div>
            }
            <RadzenText Style="margin: 0">@card.Name</RadzenText>
        </RadzenStack>
    </Template>
</RadzenDataList>

<!-- Toggle Header for Completed Tasks -->
<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Style="cursor: pointer; margin-top: 20px;" @onclick="ToggleCompleted">
    <RadzenIcon Icon="@(_showCompleted ? "expand_more" : "chevron_right")" Style="margin-right: 5px;" />
    <RadzenText TagName="TagName.H4" Style="margin:0">Completed (@_completed.Count)</RadzenText>
</RadzenStack>

<!-- Conditionally render the completed tasks -->
@if (_showCompleted)
{
    <RadzenDataList Data="@_completed" TItem="Models.TaskCard">
        <Template Context="task">
            <RadzenStack AlignItems="AlignItems.Center" Orientation="Orientation.Horizontal" Style="cursor: pointer"
                         @onclick="() => Open(task)">
                <div @onclick:stopPropagation="true" @onclick:preventDefault="true">
                    <RadzenIcon Icon="radio_button_checked" class="radio-check" @onclick="() => UnmarkAsCompleted(task)" />
                </div>
                <RadzenText Style="margin: 0" class="completed-text">@task.Name</RadzenText>
            </RadzenStack>
        </Template>
    </RadzenDataList>
}

<style>
    .radio-check {
        color: #888;
        transition: color 0.2s;
    }

        .radio-check:hover {
            color: var(--rz-primary);
        }

    .completed-text {
        color: #888;
        text-decoration: line-through;
    }

	.aurora-background {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		z-index: -1;
		background: radial-gradient(circle, rgb(0 206 255) 0%, rgb(137, 224, 240 / 90%) 100%);
		overflow: hidden;
	}

	.aurora {
		position: absolute;
		top: 0;
		width: 100%;
		height: 100%;
		background: linear-gradient(120deg, rgba(58,123,213,0.7), rgba(0,210,255,0.5), rgba(58,123,213,0.7));
		animation: auroraMove 10s ease-in-out infinite;
		filter: blur(60px);
		opacity: 0.4;
	}

		.aurora:nth-child(2) {
			animation-delay: 3s;
		}

		.aurora:nth-child(3) {
			animation-delay: 6s;
		}

	@@keyframes auroraMove {
		0% {
			transform: translate(-20%, -20%) scale(1.2);
		}

		50% {
			transform: translate(20%, 20%) scale(1);
		}

		100% {
			transform: translate(-20%, -20%) scale(1.2);
		}
	}

</style>
