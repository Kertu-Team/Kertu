@page "/lists"
@using Kertu.InteractiveServer.Data.KertuElements
@using Microsoft.EntityFrameworkCore
@using Data

@inject ApplicationDbContext dbContext

<RadzenStack Gap="1rem">
    <RadzenCard Variant="Variant.Outlined">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1.5rem;" Wrap="FlexWrap.Wrap">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem;">
                <RadzenLabel Text="Logical filter operator:" Component="operator" />
                <RadzenDropDown @bind-Value="@logicalFilterOperator" TextProperty="Text" ValueProperty="Value" Name="operator" Change=@(args => grid.Reload())
                                Data="@(Enum.GetValues(typeof(LogicalFilterOperator)).Cast<LogicalFilterOperator>().Select(t => new { Text = $"{t}", Value = t }))" />
            </RadzenStack>
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem;">
                <RadzenLabel Text="Filter case sensitivity:" Component="caseSensitivity" />
                <RadzenDropDown @bind-Value="@filterCaseSensitivity" TextProperty="Text" ValueProperty="Value" Name="caseSensitivity" Change=@(args => grid.Reload())
                                Data="@(Enum.GetValues(typeof(FilterCaseSensitivity)).Cast<FilterCaseSensitivity>().Select(t => new { Text = $"{t}", Value = t }))" />
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>

    <RadzenDataGrid @ref=grid AllowFiltering="true" AllowColumnResize="true"
                    FilterMode="FilterMode.Simple" PageSize="5" AllowPaging="true" AllowSorting="true" Data="@kertuList" ColumnWidth="300px"
                    FilterCaseSensitivity="@filterCaseSensitivity" LogicalFilterOperator="@logicalFilterOperator">
        <Columns>
            <RadzenDataGridColumn Property="@nameof(KertuCard.Id)" Filterable="false" Title="ID" Frozen="true" Width="80px" TextAlign="TextAlign.Center" />
            <RadzenDataGridColumn Property="@nameof(KertuCard.Name)" Title="Task Name" Width="200px" />
        </Columns>
    </RadzenDataGrid>
</RadzenStack>

@code {
    RadzenDataGrid<KertuCard> grid;

    LogicalFilterOperator logicalFilterOperator = LogicalFilterOperator.And;
    FilterCaseSensitivity filterCaseSensitivity = FilterCaseSensitivity.CaseInsensitive;

    List<KertuCard> kertuList = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        // Fetch KertuLists from the database (instead of KertuElements)
        kertuList = await dbContext.Set<KertuCard>()
            .Where(kc => kc.Name != null) // Ensure non-null values for filtering
            .ToListAsync();
    }
}
